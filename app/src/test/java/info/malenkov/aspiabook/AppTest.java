package info.malenkov.aspiabook;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import java.math.BigInteger;
import java.security.NoSuchAlgorithmException;

class SPRMatchTest {
	String hash_256_ref	       = "7434C59AF9719F3CB23DE0A9AE13DDD683618490B2CE835F32F3FA595D131C98";
	String hash_512_ref	       = "828627CA9B28EC79ADABBD78539FA18C8CA84533026C32AC00442EB98E6488C7D4C9297433DC39CFEFD3FBB01C2A01720EAE2AEA337CD7742B879E94006FD57B";
	String a_buf               = "60975527035CF2AD1989806F0407210BC81EDC04E2762A56AFD529DDDA2D4393";
	String b_buf               = "E487CB59D31AC550471E81F00F6928E01DDA08E974A004F49E61F5D105284D20";
	String s_buf               = "BEB25379D1A8581EB5A727673A2441EE";
	String g_buf               = "02";
	String x_ref_buf           = "A9B32D4718F00A4AA61F7E24DED3FF16C3A551EDEF4412DEC03783BE0BD3461079F88166A4902D13D31CAB0C86BC936D93D263BBC9976F6E2C35D1E19772CA7D";
	String u_ref_buf           = "48A266301B9B4A2E9B13E01BDFD0E48A206814C3A5CE3C4EB5D6D4503DC19558950D06C720DAC3996B7AD7050D8439A8CB46FA0796F98521C58BFCC914EC1103";
	String v_ref_buf           = "8CB3F772B67D3D7B44D07840B9BF0C5F492F7E85AA337F96AFACE5B12F8036ADA1BB76583753FCA89858DEA5F33C646208E31B72BD6FE9C27E4FF5E68F211B52A1726CACD9BBB885B0F0C327B387A658A84C45B27A108488B1BAC6618744AF5675266795F62941DFECC7A61F4CE59B4F9C1F92DCA5E4D4AFFE6C2D4CBCB76627";
	String A_ref_buf           = "61D5E490F6F1B79547B0704C436F523DD0E560F0C64115BB72557EC44352E8903211C04692272D8B2D1A5358A2CF1B6E0BFCF99F921530EC8E39356179EAE45E42BA92AEACED825171E1E8B9AF6D9C03E1327F44BE087EF06530E69F66615261EEF54073CA11CF5858F0EDFDFE15EFEAB349EF5D76988A3672FAC47B0769447B";
	String B_ref_buf           = "4F0571ED14E68B76B4999C238093048187501C58B9FDF653C06837924A8F996A543D72C734EC6793F9FFFBA7FB65C1EBC5D8E28AD0AEB21CDB86D71ED36673D71878F0D3D8517781AE676F16164E8E7111C162FBED32FA6BCC3E88287222A434DED9F5E5352059CD91FFC839D6D3C6BCE0EBA4027CC04B4244E27D723BE2E197";
	String key_ref_buf         = "D9D6C9ABF277B0052E40DF3A031358C03166E7F815425CCA1ABAAA637303184731DCDFDCC8C786EA164766EEAB9FCD135C9CF8F6F7EB0DA8F306543881A22F06A0B6EBD7498C72BCC520614E5AF221DAFB2FBA19F45DA6943F9552BB65FCB3819C66771DC180DD083DA822862C4CD7D09D9E260C5F7657D06D40FCBD14BCED40";
	String kSrpGroup_1024      = "EEAF0AB9ADB38DD69C33F80AFA8FC5E86072618775FF3C0B9EA2314C9C256576D674DF7496EA81D3383B4813D692C6E0E0D5D8E250B98BE48E495C1D6089DAD15DC7D7B46154D6B6CE8EF4AD69B15D4982559B297BCF1885C529F566660E57EC68EDBC3C05726CC02FD4CBF4976EAA9AFD5138FE8376435B9FC61D2FC0EB06E3";
	String I                   = "alice";
	String p                   = "password123";

	BigInteger BN_hash_256_ref = new BigInteger(hash_256_ref, 16);
	BigInteger BN_hash_512_ref = new BigInteger(hash_512_ref, 16);
	BigInteger BN_u_ref        = new BigInteger(u_ref_buf, 16);
	BigInteger BN_x_ref        = new BigInteger(x_ref_buf, 16);
	BigInteger BN_v_ref        = new BigInteger(v_ref_buf, 16);
	BigInteger BN_A_ref        = new BigInteger(A_ref_buf, 16);
	BigInteger BN_B_ref        = new BigInteger(B_ref_buf, 16);
	BigInteger BN_key_ref      = new BigInteger(key_ref_buf, 16);
	BigInteger BN_a            = new BigInteger(a_buf, 16);
	BigInteger BN_b            = new BigInteger(b_buf, 16);
	BigInteger BN_s            = new BigInteger(s_buf, 16);
	BigInteger BN_N            = new BigInteger(kSrpGroup_1024, 16);
	BigInteger BN_g            = new BigInteger(g_buf, 16);

	@Test void Test() throws NoSuchAlgorithmException{
		BigInteger BN_hash_256 = SPRMatch.hash_BLAKE2s256(BN_N);
		assertTrue(BN_hash_256.equals(BN_hash_256_ref), "SPRMatch.hash_BLAKE2s256(BN_N)");
		
		BigInteger BN_hash_512 = SPRMatch.hash_BLAKE2b512(BN_N);
		assertTrue(BN_hash_512.equals(BN_hash_512_ref), "SPRMatch.hash_BLAKE2b512(BN_N)");

		BigInteger BN_A = SPRMatch.calc_A(BN_a, BN_N, BN_g);
		assertTrue(BN_A.equals(BN_A_ref), "SPRMatch.calc_A(BN_a, BN_N, BN_g)");

		BigInteger BN_B = SPRMatch.calc_B(BN_b, BN_N, BN_g, BN_v_ref);
		assertTrue(BN_B.equals(BN_B_ref), "SPRMatch.calc_B(BN_b, BN_N, BN_g, BN_v_ref)");

		BigInteger BN_u = SPRMatch.calc_u(BN_A, BN_B, BN_N);
		assertTrue(BN_u.equals(BN_u_ref), "SPRMatch.calc_u(BN_A, BN_B, BN_N)");

		BigInteger BN_x = SPRMatch.calc_x(BN_s, I, p);
		assertTrue(BN_x.equals(BN_x_ref), "SPRMatch.calc_x(BN_s, I, p)");

		BigInteger BN_v = SPRMatch.calc_v(I, p, BN_s, BN_N, BN_g);
		assertTrue(BN_v.equals(BN_v_ref), "SPRMatch.calc_v(I, p, BN_s, BN_N, BN_g)");

		BigInteger BN_client_key = SPRMatch.calcClientKey(BN_N, BN_B, BN_g, BN_x, BN_a, BN_u);
		assertTrue(BN_client_key.equals(BN_key_ref), "SPRMatch.calcClientKey(BN_N, BN_B, BN_g, BN_x, BN_a, BN_u)");
	}
}
