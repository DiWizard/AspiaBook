// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aspia.desktop.proto

package info.malenkov.aspiabook.proto;

/**
 * Protobuf enum {@code info.malenkov.aspiabook.proto.DesktopFlags}
 */
public enum DesktopFlags
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>NO_FLAGS = 0;</code>
   */
  NO_FLAGS(0),
  /**
   * <code>ENABLE_CURSOR_SHAPE = 1;</code>
   */
  ENABLE_CURSOR_SHAPE(1),
  /**
   * <code>ENABLE_CLIPBOARD = 2;</code>
   */
  ENABLE_CLIPBOARD(2),
  /**
   * <code>DISABLE_DESKTOP_EFFECTS = 4;</code>
   */
  DISABLE_DESKTOP_EFFECTS(4),
  /**
   * <code>DISABLE_DESKTOP_WALLPAPER = 8;</code>
   */
  DISABLE_DESKTOP_WALLPAPER(8),
  /**
   * <code>DISABLE_FONT_SMOOTHING = 16;</code>
   */
  DISABLE_FONT_SMOOTHING(16),
  /**
   * <code>BLOCK_REMOTE_INPUT = 32;</code>
   */
  BLOCK_REMOTE_INPUT(32),
  /**
   * <code>LOCK_AT_DISCONNECT = 64;</code>
   */
  LOCK_AT_DISCONNECT(64),
  /**
   * <code>CURSOR_POSITION = 128;</code>
   */
  CURSOR_POSITION(128),
  /**
   * <code>CLEAR_CLIPBOARD = 256;</code>
   */
  CLEAR_CLIPBOARD(256),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>NO_FLAGS = 0;</code>
   */
  public static final int NO_FLAGS_VALUE = 0;
  /**
   * <code>ENABLE_CURSOR_SHAPE = 1;</code>
   */
  public static final int ENABLE_CURSOR_SHAPE_VALUE = 1;
  /**
   * <code>ENABLE_CLIPBOARD = 2;</code>
   */
  public static final int ENABLE_CLIPBOARD_VALUE = 2;
  /**
   * <code>DISABLE_DESKTOP_EFFECTS = 4;</code>
   */
  public static final int DISABLE_DESKTOP_EFFECTS_VALUE = 4;
  /**
   * <code>DISABLE_DESKTOP_WALLPAPER = 8;</code>
   */
  public static final int DISABLE_DESKTOP_WALLPAPER_VALUE = 8;
  /**
   * <code>DISABLE_FONT_SMOOTHING = 16;</code>
   */
  public static final int DISABLE_FONT_SMOOTHING_VALUE = 16;
  /**
   * <code>BLOCK_REMOTE_INPUT = 32;</code>
   */
  public static final int BLOCK_REMOTE_INPUT_VALUE = 32;
  /**
   * <code>LOCK_AT_DISCONNECT = 64;</code>
   */
  public static final int LOCK_AT_DISCONNECT_VALUE = 64;
  /**
   * <code>CURSOR_POSITION = 128;</code>
   */
  public static final int CURSOR_POSITION_VALUE = 128;
  /**
   * <code>CLEAR_CLIPBOARD = 256;</code>
   */
  public static final int CLEAR_CLIPBOARD_VALUE = 256;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static DesktopFlags valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static DesktopFlags forNumber(int value) {
    switch (value) {
      case 0: return NO_FLAGS;
      case 1: return ENABLE_CURSOR_SHAPE;
      case 2: return ENABLE_CLIPBOARD;
      case 4: return DISABLE_DESKTOP_EFFECTS;
      case 8: return DISABLE_DESKTOP_WALLPAPER;
      case 16: return DISABLE_FONT_SMOOTHING;
      case 32: return BLOCK_REMOTE_INPUT;
      case 64: return LOCK_AT_DISCONNECT;
      case 128: return CURSOR_POSITION;
      case 256: return CLEAR_CLIPBOARD;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<DesktopFlags>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      DesktopFlags> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<DesktopFlags>() {
          public DesktopFlags findValueByNumber(int number) {
            return DesktopFlags.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return info.malenkov.aspiabook.proto.AspiaDesktop.getDescriptor().getEnumTypes().get(2);
  }

  private static final DesktopFlags[] VALUES = values();

  public static DesktopFlags valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private DesktopFlags(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:info.malenkov.aspiabook.proto.DesktopFlags)
}

