// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aspia.desktop.proto

package info.malenkov.aspiabook.proto;

/**
 * Protobuf type {@code info.malenkov.aspiabook.proto.PixelFormat}
 */
public final class PixelFormat extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:info.malenkov.aspiabook.proto.PixelFormat)
    PixelFormatOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PixelFormat.newBuilder() to construct.
  private PixelFormat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PixelFormat() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PixelFormat();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return info.malenkov.aspiabook.proto.AspiaDesktop.internal_static_info_malenkov_aspiabook_proto_PixelFormat_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return info.malenkov.aspiabook.proto.AspiaDesktop.internal_static_info_malenkov_aspiabook_proto_PixelFormat_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            info.malenkov.aspiabook.proto.PixelFormat.class, info.malenkov.aspiabook.proto.PixelFormat.Builder.class);
  }

  public static final int BITS_PER_PIXEL_FIELD_NUMBER = 1;
  private int bitsPerPixel_ = 0;
  /**
   * <code>uint32 bits_per_pixel = 1;</code>
   * @return The bitsPerPixel.
   */
  @java.lang.Override
  public int getBitsPerPixel() {
    return bitsPerPixel_;
  }

  public static final int RED_MAX_FIELD_NUMBER = 2;
  private int redMax_ = 0;
  /**
   * <code>uint32 red_max = 2;</code>
   * @return The redMax.
   */
  @java.lang.Override
  public int getRedMax() {
    return redMax_;
  }

  public static final int GREEN_MAX_FIELD_NUMBER = 3;
  private int greenMax_ = 0;
  /**
   * <code>uint32 green_max = 3;</code>
   * @return The greenMax.
   */
  @java.lang.Override
  public int getGreenMax() {
    return greenMax_;
  }

  public static final int BLUE_MAX_FIELD_NUMBER = 4;
  private int blueMax_ = 0;
  /**
   * <code>uint32 blue_max = 4;</code>
   * @return The blueMax.
   */
  @java.lang.Override
  public int getBlueMax() {
    return blueMax_;
  }

  public static final int RED_SHIFT_FIELD_NUMBER = 5;
  private int redShift_ = 0;
  /**
   * <code>uint32 red_shift = 5;</code>
   * @return The redShift.
   */
  @java.lang.Override
  public int getRedShift() {
    return redShift_;
  }

  public static final int GREEN_SHIFT_FIELD_NUMBER = 6;
  private int greenShift_ = 0;
  /**
   * <code>uint32 green_shift = 6;</code>
   * @return The greenShift.
   */
  @java.lang.Override
  public int getGreenShift() {
    return greenShift_;
  }

  public static final int BLUE_SHIFT_FIELD_NUMBER = 7;
  private int blueShift_ = 0;
  /**
   * <code>uint32 blue_shift = 7;</code>
   * @return The blueShift.
   */
  @java.lang.Override
  public int getBlueShift() {
    return blueShift_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (bitsPerPixel_ != 0) {
      output.writeUInt32(1, bitsPerPixel_);
    }
    if (redMax_ != 0) {
      output.writeUInt32(2, redMax_);
    }
    if (greenMax_ != 0) {
      output.writeUInt32(3, greenMax_);
    }
    if (blueMax_ != 0) {
      output.writeUInt32(4, blueMax_);
    }
    if (redShift_ != 0) {
      output.writeUInt32(5, redShift_);
    }
    if (greenShift_ != 0) {
      output.writeUInt32(6, greenShift_);
    }
    if (blueShift_ != 0) {
      output.writeUInt32(7, blueShift_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (bitsPerPixel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, bitsPerPixel_);
    }
    if (redMax_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, redMax_);
    }
    if (greenMax_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, greenMax_);
    }
    if (blueMax_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, blueMax_);
    }
    if (redShift_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, redShift_);
    }
    if (greenShift_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, greenShift_);
    }
    if (blueShift_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, blueShift_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof info.malenkov.aspiabook.proto.PixelFormat)) {
      return super.equals(obj);
    }
    info.malenkov.aspiabook.proto.PixelFormat other = (info.malenkov.aspiabook.proto.PixelFormat) obj;

    if (getBitsPerPixel()
        != other.getBitsPerPixel()) return false;
    if (getRedMax()
        != other.getRedMax()) return false;
    if (getGreenMax()
        != other.getGreenMax()) return false;
    if (getBlueMax()
        != other.getBlueMax()) return false;
    if (getRedShift()
        != other.getRedShift()) return false;
    if (getGreenShift()
        != other.getGreenShift()) return false;
    if (getBlueShift()
        != other.getBlueShift()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + BITS_PER_PIXEL_FIELD_NUMBER;
    hash = (53 * hash) + getBitsPerPixel();
    hash = (37 * hash) + RED_MAX_FIELD_NUMBER;
    hash = (53 * hash) + getRedMax();
    hash = (37 * hash) + GREEN_MAX_FIELD_NUMBER;
    hash = (53 * hash) + getGreenMax();
    hash = (37 * hash) + BLUE_MAX_FIELD_NUMBER;
    hash = (53 * hash) + getBlueMax();
    hash = (37 * hash) + RED_SHIFT_FIELD_NUMBER;
    hash = (53 * hash) + getRedShift();
    hash = (37 * hash) + GREEN_SHIFT_FIELD_NUMBER;
    hash = (53 * hash) + getGreenShift();
    hash = (37 * hash) + BLUE_SHIFT_FIELD_NUMBER;
    hash = (53 * hash) + getBlueShift();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static info.malenkov.aspiabook.proto.PixelFormat parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiabook.proto.PixelFormat parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiabook.proto.PixelFormat parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiabook.proto.PixelFormat parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiabook.proto.PixelFormat parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiabook.proto.PixelFormat parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiabook.proto.PixelFormat parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiabook.proto.PixelFormat parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static info.malenkov.aspiabook.proto.PixelFormat parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiabook.proto.PixelFormat parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static info.malenkov.aspiabook.proto.PixelFormat parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiabook.proto.PixelFormat parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(info.malenkov.aspiabook.proto.PixelFormat prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code info.malenkov.aspiabook.proto.PixelFormat}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:info.malenkov.aspiabook.proto.PixelFormat)
      info.malenkov.aspiabook.proto.PixelFormatOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return info.malenkov.aspiabook.proto.AspiaDesktop.internal_static_info_malenkov_aspiabook_proto_PixelFormat_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return info.malenkov.aspiabook.proto.AspiaDesktop.internal_static_info_malenkov_aspiabook_proto_PixelFormat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.malenkov.aspiabook.proto.PixelFormat.class, info.malenkov.aspiabook.proto.PixelFormat.Builder.class);
    }

    // Construct using info.malenkov.aspiabook.proto.PixelFormat.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      bitsPerPixel_ = 0;
      redMax_ = 0;
      greenMax_ = 0;
      blueMax_ = 0;
      redShift_ = 0;
      greenShift_ = 0;
      blueShift_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return info.malenkov.aspiabook.proto.AspiaDesktop.internal_static_info_malenkov_aspiabook_proto_PixelFormat_descriptor;
    }

    @java.lang.Override
    public info.malenkov.aspiabook.proto.PixelFormat getDefaultInstanceForType() {
      return info.malenkov.aspiabook.proto.PixelFormat.getDefaultInstance();
    }

    @java.lang.Override
    public info.malenkov.aspiabook.proto.PixelFormat build() {
      info.malenkov.aspiabook.proto.PixelFormat result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public info.malenkov.aspiabook.proto.PixelFormat buildPartial() {
      info.malenkov.aspiabook.proto.PixelFormat result = new info.malenkov.aspiabook.proto.PixelFormat(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(info.malenkov.aspiabook.proto.PixelFormat result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.bitsPerPixel_ = bitsPerPixel_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.redMax_ = redMax_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.greenMax_ = greenMax_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.blueMax_ = blueMax_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.redShift_ = redShift_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.greenShift_ = greenShift_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.blueShift_ = blueShift_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof info.malenkov.aspiabook.proto.PixelFormat) {
        return mergeFrom((info.malenkov.aspiabook.proto.PixelFormat)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(info.malenkov.aspiabook.proto.PixelFormat other) {
      if (other == info.malenkov.aspiabook.proto.PixelFormat.getDefaultInstance()) return this;
      if (other.getBitsPerPixel() != 0) {
        setBitsPerPixel(other.getBitsPerPixel());
      }
      if (other.getRedMax() != 0) {
        setRedMax(other.getRedMax());
      }
      if (other.getGreenMax() != 0) {
        setGreenMax(other.getGreenMax());
      }
      if (other.getBlueMax() != 0) {
        setBlueMax(other.getBlueMax());
      }
      if (other.getRedShift() != 0) {
        setRedShift(other.getRedShift());
      }
      if (other.getGreenShift() != 0) {
        setGreenShift(other.getGreenShift());
      }
      if (other.getBlueShift() != 0) {
        setBlueShift(other.getBlueShift());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitsPerPixel_ = input.readUInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              redMax_ = input.readUInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              greenMax_ = input.readUInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              blueMax_ = input.readUInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              redShift_ = input.readUInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              greenShift_ = input.readUInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              blueShift_ = input.readUInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int bitsPerPixel_ ;
    /**
     * <code>uint32 bits_per_pixel = 1;</code>
     * @return The bitsPerPixel.
     */
    @java.lang.Override
    public int getBitsPerPixel() {
      return bitsPerPixel_;
    }
    /**
     * <code>uint32 bits_per_pixel = 1;</code>
     * @param value The bitsPerPixel to set.
     * @return This builder for chaining.
     */
    public Builder setBitsPerPixel(int value) {

      bitsPerPixel_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 bits_per_pixel = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearBitsPerPixel() {
      bitField0_ = (bitField0_ & ~0x00000001);
      bitsPerPixel_ = 0;
      onChanged();
      return this;
    }

    private int redMax_ ;
    /**
     * <code>uint32 red_max = 2;</code>
     * @return The redMax.
     */
    @java.lang.Override
    public int getRedMax() {
      return redMax_;
    }
    /**
     * <code>uint32 red_max = 2;</code>
     * @param value The redMax to set.
     * @return This builder for chaining.
     */
    public Builder setRedMax(int value) {

      redMax_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 red_max = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearRedMax() {
      bitField0_ = (bitField0_ & ~0x00000002);
      redMax_ = 0;
      onChanged();
      return this;
    }

    private int greenMax_ ;
    /**
     * <code>uint32 green_max = 3;</code>
     * @return The greenMax.
     */
    @java.lang.Override
    public int getGreenMax() {
      return greenMax_;
    }
    /**
     * <code>uint32 green_max = 3;</code>
     * @param value The greenMax to set.
     * @return This builder for chaining.
     */
    public Builder setGreenMax(int value) {

      greenMax_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 green_max = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearGreenMax() {
      bitField0_ = (bitField0_ & ~0x00000004);
      greenMax_ = 0;
      onChanged();
      return this;
    }

    private int blueMax_ ;
    /**
     * <code>uint32 blue_max = 4;</code>
     * @return The blueMax.
     */
    @java.lang.Override
    public int getBlueMax() {
      return blueMax_;
    }
    /**
     * <code>uint32 blue_max = 4;</code>
     * @param value The blueMax to set.
     * @return This builder for chaining.
     */
    public Builder setBlueMax(int value) {

      blueMax_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 blue_max = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearBlueMax() {
      bitField0_ = (bitField0_ & ~0x00000008);
      blueMax_ = 0;
      onChanged();
      return this;
    }

    private int redShift_ ;
    /**
     * <code>uint32 red_shift = 5;</code>
     * @return The redShift.
     */
    @java.lang.Override
    public int getRedShift() {
      return redShift_;
    }
    /**
     * <code>uint32 red_shift = 5;</code>
     * @param value The redShift to set.
     * @return This builder for chaining.
     */
    public Builder setRedShift(int value) {

      redShift_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 red_shift = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearRedShift() {
      bitField0_ = (bitField0_ & ~0x00000010);
      redShift_ = 0;
      onChanged();
      return this;
    }

    private int greenShift_ ;
    /**
     * <code>uint32 green_shift = 6;</code>
     * @return The greenShift.
     */
    @java.lang.Override
    public int getGreenShift() {
      return greenShift_;
    }
    /**
     * <code>uint32 green_shift = 6;</code>
     * @param value The greenShift to set.
     * @return This builder for chaining.
     */
    public Builder setGreenShift(int value) {

      greenShift_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 green_shift = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearGreenShift() {
      bitField0_ = (bitField0_ & ~0x00000020);
      greenShift_ = 0;
      onChanged();
      return this;
    }

    private int blueShift_ ;
    /**
     * <code>uint32 blue_shift = 7;</code>
     * @return The blueShift.
     */
    @java.lang.Override
    public int getBlueShift() {
      return blueShift_;
    }
    /**
     * <code>uint32 blue_shift = 7;</code>
     * @param value The blueShift to set.
     * @return This builder for chaining.
     */
    public Builder setBlueShift(int value) {

      blueShift_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 blue_shift = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearBlueShift() {
      bitField0_ = (bitField0_ & ~0x00000040);
      blueShift_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:info.malenkov.aspiabook.proto.PixelFormat)
  }

  // @@protoc_insertion_point(class_scope:info.malenkov.aspiabook.proto.PixelFormat)
  private static final info.malenkov.aspiabook.proto.PixelFormat DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new info.malenkov.aspiabook.proto.PixelFormat();
  }

  public static info.malenkov.aspiabook.proto.PixelFormat getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PixelFormat>
      PARSER = new com.google.protobuf.AbstractParser<PixelFormat>() {
    @java.lang.Override
    public PixelFormat parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PixelFormat> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PixelFormat> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public info.malenkov.aspiabook.proto.PixelFormat getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

