// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aspia.desktop.proto

package info.malenkov.aspiabook.proto;

/**
 * Protobuf type {@code info.malenkov.aspiabook.proto.CursorShape}
 */
public final class CursorShape extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:info.malenkov.aspiabook.proto.CursorShape)
    CursorShapeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CursorShape.newBuilder() to construct.
  private CursorShape(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CursorShape() {
    data_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CursorShape();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return info.malenkov.aspiabook.proto.AspiaDesktop.internal_static_info_malenkov_aspiabook_proto_CursorShape_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return info.malenkov.aspiabook.proto.AspiaDesktop.internal_static_info_malenkov_aspiabook_proto_CursorShape_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            info.malenkov.aspiabook.proto.CursorShape.class, info.malenkov.aspiabook.proto.CursorShape.Builder.class);
  }

  /**
   * Protobuf enum {@code info.malenkov.aspiabook.proto.CursorShape.Flags}
   */
  public enum Flags
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <code>RESET_CACHE = 64;</code>
     */
    RESET_CACHE(64),
    /**
     * <code>CACHE = 128;</code>
     */
    CACHE(128),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>RESET_CACHE = 64;</code>
     */
    public static final int RESET_CACHE_VALUE = 64;
    /**
     * <code>CACHE = 128;</code>
     */
    public static final int CACHE_VALUE = 128;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Flags valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Flags forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 64: return RESET_CACHE;
        case 128: return CACHE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Flags>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Flags> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Flags>() {
            public Flags findValueByNumber(int number) {
              return Flags.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return info.malenkov.aspiabook.proto.CursorShape.getDescriptor().getEnumTypes().get(0);
    }

    private static final Flags[] VALUES = values();

    public static Flags valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Flags(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:info.malenkov.aspiabook.proto.CursorShape.Flags)
  }

  public static final int FLAGS_FIELD_NUMBER = 1;
  private int flags_ = 0;
  /**
   * <pre>
   * We use only the first byte in this field.
   * If bit 7 is set to 1, then bits 0-4 contain the cursor index in the cache.
   * If bit 7 is not set, then the cursor image is received.
   * If bit 6 is set to 1, then the command to reset the contents of the cache
   * is received, and bits 0-4 contain a new cache size.
   * Bit 5 is reserved.
   * </pre>
   *
   * <code>uint32 flags = 1;</code>
   * @return The flags.
   */
  @java.lang.Override
  public int getFlags() {
    return flags_;
  }

  public static final int WIDTH_FIELD_NUMBER = 2;
  private int width_ = 0;
  /**
   * <pre>
   * Width, height (in screen pixels) of the cursor.
   * </pre>
   *
   * <code>int32 width = 2;</code>
   * @return The width.
   */
  @java.lang.Override
  public int getWidth() {
    return width_;
  }

  public static final int HEIGHT_FIELD_NUMBER = 3;
  private int height_ = 0;
  /**
   * <code>int32 height = 3;</code>
   * @return The height.
   */
  @java.lang.Override
  public int getHeight() {
    return height_;
  }

  public static final int HOTSPOT_X_FIELD_NUMBER = 4;
  private int hotspotX_ = 0;
  /**
   * <pre>
   * X,Y coordinates (relative to upper-left corner) of the cursor hotspot.
   * </pre>
   *
   * <code>int32 hotspot_x = 4;</code>
   * @return The hotspotX.
   */
  @java.lang.Override
  public int getHotspotX() {
    return hotspotX_;
  }

  public static final int HOTSPOT_Y_FIELD_NUMBER = 5;
  private int hotspotY_ = 0;
  /**
   * <code>int32 hotspot_y = 5;</code>
   * @return The hotspotY.
   */
  @java.lang.Override
  public int getHotspotY() {
    return hotspotY_;
  }

  public static final int DATA_FIELD_NUMBER = 6;
  private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <pre>
   * Cursor pixmap data in 32-bit BGRA format compressed with Zstd.
   * </pre>
   *
   * <code>bytes data = 6;</code>
   * @return The data.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getData() {
    return data_;
  }

  public static final int DPI_X_FIELD_NUMBER = 7;
  private int dpiX_ = 0;
  /**
   * <pre>
   * Screen DPI for current cursor.
   * </pre>
   *
   * <code>int32 dpi_x = 7;</code>
   * @return The dpiX.
   */
  @java.lang.Override
  public int getDpiX() {
    return dpiX_;
  }

  public static final int DPI_Y_FIELD_NUMBER = 8;
  private int dpiY_ = 0;
  /**
   * <code>int32 dpi_y = 8;</code>
   * @return The dpiY.
   */
  @java.lang.Override
  public int getDpiY() {
    return dpiY_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (flags_ != 0) {
      output.writeUInt32(1, flags_);
    }
    if (width_ != 0) {
      output.writeInt32(2, width_);
    }
    if (height_ != 0) {
      output.writeInt32(3, height_);
    }
    if (hotspotX_ != 0) {
      output.writeInt32(4, hotspotX_);
    }
    if (hotspotY_ != 0) {
      output.writeInt32(5, hotspotY_);
    }
    if (!data_.isEmpty()) {
      output.writeBytes(6, data_);
    }
    if (dpiX_ != 0) {
      output.writeInt32(7, dpiX_);
    }
    if (dpiY_ != 0) {
      output.writeInt32(8, dpiY_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (flags_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, flags_);
    }
    if (width_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, width_);
    }
    if (height_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, height_);
    }
    if (hotspotX_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, hotspotX_);
    }
    if (hotspotY_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, hotspotY_);
    }
    if (!data_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(6, data_);
    }
    if (dpiX_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, dpiX_);
    }
    if (dpiY_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, dpiY_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof info.malenkov.aspiabook.proto.CursorShape)) {
      return super.equals(obj);
    }
    info.malenkov.aspiabook.proto.CursorShape other = (info.malenkov.aspiabook.proto.CursorShape) obj;

    if (getFlags()
        != other.getFlags()) return false;
    if (getWidth()
        != other.getWidth()) return false;
    if (getHeight()
        != other.getHeight()) return false;
    if (getHotspotX()
        != other.getHotspotX()) return false;
    if (getHotspotY()
        != other.getHotspotY()) return false;
    if (!getData()
        .equals(other.getData())) return false;
    if (getDpiX()
        != other.getDpiX()) return false;
    if (getDpiY()
        != other.getDpiY()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FLAGS_FIELD_NUMBER;
    hash = (53 * hash) + getFlags();
    hash = (37 * hash) + WIDTH_FIELD_NUMBER;
    hash = (53 * hash) + getWidth();
    hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
    hash = (53 * hash) + getHeight();
    hash = (37 * hash) + HOTSPOT_X_FIELD_NUMBER;
    hash = (53 * hash) + getHotspotX();
    hash = (37 * hash) + HOTSPOT_Y_FIELD_NUMBER;
    hash = (53 * hash) + getHotspotY();
    hash = (37 * hash) + DATA_FIELD_NUMBER;
    hash = (53 * hash) + getData().hashCode();
    hash = (37 * hash) + DPI_X_FIELD_NUMBER;
    hash = (53 * hash) + getDpiX();
    hash = (37 * hash) + DPI_Y_FIELD_NUMBER;
    hash = (53 * hash) + getDpiY();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static info.malenkov.aspiabook.proto.CursorShape parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiabook.proto.CursorShape parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiabook.proto.CursorShape parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiabook.proto.CursorShape parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiabook.proto.CursorShape parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiabook.proto.CursorShape parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiabook.proto.CursorShape parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiabook.proto.CursorShape parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static info.malenkov.aspiabook.proto.CursorShape parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiabook.proto.CursorShape parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static info.malenkov.aspiabook.proto.CursorShape parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiabook.proto.CursorShape parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(info.malenkov.aspiabook.proto.CursorShape prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code info.malenkov.aspiabook.proto.CursorShape}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:info.malenkov.aspiabook.proto.CursorShape)
      info.malenkov.aspiabook.proto.CursorShapeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return info.malenkov.aspiabook.proto.AspiaDesktop.internal_static_info_malenkov_aspiabook_proto_CursorShape_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return info.malenkov.aspiabook.proto.AspiaDesktop.internal_static_info_malenkov_aspiabook_proto_CursorShape_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.malenkov.aspiabook.proto.CursorShape.class, info.malenkov.aspiabook.proto.CursorShape.Builder.class);
    }

    // Construct using info.malenkov.aspiabook.proto.CursorShape.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      flags_ = 0;
      width_ = 0;
      height_ = 0;
      hotspotX_ = 0;
      hotspotY_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
      dpiX_ = 0;
      dpiY_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return info.malenkov.aspiabook.proto.AspiaDesktop.internal_static_info_malenkov_aspiabook_proto_CursorShape_descriptor;
    }

    @java.lang.Override
    public info.malenkov.aspiabook.proto.CursorShape getDefaultInstanceForType() {
      return info.malenkov.aspiabook.proto.CursorShape.getDefaultInstance();
    }

    @java.lang.Override
    public info.malenkov.aspiabook.proto.CursorShape build() {
      info.malenkov.aspiabook.proto.CursorShape result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public info.malenkov.aspiabook.proto.CursorShape buildPartial() {
      info.malenkov.aspiabook.proto.CursorShape result = new info.malenkov.aspiabook.proto.CursorShape(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(info.malenkov.aspiabook.proto.CursorShape result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.flags_ = flags_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.width_ = width_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.height_ = height_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.hotspotX_ = hotspotX_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.hotspotY_ = hotspotY_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.data_ = data_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.dpiX_ = dpiX_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.dpiY_ = dpiY_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof info.malenkov.aspiabook.proto.CursorShape) {
        return mergeFrom((info.malenkov.aspiabook.proto.CursorShape)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(info.malenkov.aspiabook.proto.CursorShape other) {
      if (other == info.malenkov.aspiabook.proto.CursorShape.getDefaultInstance()) return this;
      if (other.getFlags() != 0) {
        setFlags(other.getFlags());
      }
      if (other.getWidth() != 0) {
        setWidth(other.getWidth());
      }
      if (other.getHeight() != 0) {
        setHeight(other.getHeight());
      }
      if (other.getHotspotX() != 0) {
        setHotspotX(other.getHotspotX());
      }
      if (other.getHotspotY() != 0) {
        setHotspotY(other.getHotspotY());
      }
      if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
        setData(other.getData());
      }
      if (other.getDpiX() != 0) {
        setDpiX(other.getDpiX());
      }
      if (other.getDpiY() != 0) {
        setDpiY(other.getDpiY());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              flags_ = input.readUInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              width_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              height_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              hotspotX_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              hotspotY_ = input.readInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 50: {
              data_ = input.readBytes();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 56: {
              dpiX_ = input.readInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              dpiY_ = input.readInt32();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int flags_ ;
    /**
     * <pre>
     * We use only the first byte in this field.
     * If bit 7 is set to 1, then bits 0-4 contain the cursor index in the cache.
     * If bit 7 is not set, then the cursor image is received.
     * If bit 6 is set to 1, then the command to reset the contents of the cache
     * is received, and bits 0-4 contain a new cache size.
     * Bit 5 is reserved.
     * </pre>
     *
     * <code>uint32 flags = 1;</code>
     * @return The flags.
     */
    @java.lang.Override
    public int getFlags() {
      return flags_;
    }
    /**
     * <pre>
     * We use only the first byte in this field.
     * If bit 7 is set to 1, then bits 0-4 contain the cursor index in the cache.
     * If bit 7 is not set, then the cursor image is received.
     * If bit 6 is set to 1, then the command to reset the contents of the cache
     * is received, and bits 0-4 contain a new cache size.
     * Bit 5 is reserved.
     * </pre>
     *
     * <code>uint32 flags = 1;</code>
     * @param value The flags to set.
     * @return This builder for chaining.
     */
    public Builder setFlags(int value) {

      flags_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * We use only the first byte in this field.
     * If bit 7 is set to 1, then bits 0-4 contain the cursor index in the cache.
     * If bit 7 is not set, then the cursor image is received.
     * If bit 6 is set to 1, then the command to reset the contents of the cache
     * is received, and bits 0-4 contain a new cache size.
     * Bit 5 is reserved.
     * </pre>
     *
     * <code>uint32 flags = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearFlags() {
      bitField0_ = (bitField0_ & ~0x00000001);
      flags_ = 0;
      onChanged();
      return this;
    }

    private int width_ ;
    /**
     * <pre>
     * Width, height (in screen pixels) of the cursor.
     * </pre>
     *
     * <code>int32 width = 2;</code>
     * @return The width.
     */
    @java.lang.Override
    public int getWidth() {
      return width_;
    }
    /**
     * <pre>
     * Width, height (in screen pixels) of the cursor.
     * </pre>
     *
     * <code>int32 width = 2;</code>
     * @param value The width to set.
     * @return This builder for chaining.
     */
    public Builder setWidth(int value) {

      width_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Width, height (in screen pixels) of the cursor.
     * </pre>
     *
     * <code>int32 width = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearWidth() {
      bitField0_ = (bitField0_ & ~0x00000002);
      width_ = 0;
      onChanged();
      return this;
    }

    private int height_ ;
    /**
     * <code>int32 height = 3;</code>
     * @return The height.
     */
    @java.lang.Override
    public int getHeight() {
      return height_;
    }
    /**
     * <code>int32 height = 3;</code>
     * @param value The height to set.
     * @return This builder for chaining.
     */
    public Builder setHeight(int value) {

      height_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>int32 height = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearHeight() {
      bitField0_ = (bitField0_ & ~0x00000004);
      height_ = 0;
      onChanged();
      return this;
    }

    private int hotspotX_ ;
    /**
     * <pre>
     * X,Y coordinates (relative to upper-left corner) of the cursor hotspot.
     * </pre>
     *
     * <code>int32 hotspot_x = 4;</code>
     * @return The hotspotX.
     */
    @java.lang.Override
    public int getHotspotX() {
      return hotspotX_;
    }
    /**
     * <pre>
     * X,Y coordinates (relative to upper-left corner) of the cursor hotspot.
     * </pre>
     *
     * <code>int32 hotspot_x = 4;</code>
     * @param value The hotspotX to set.
     * @return This builder for chaining.
     */
    public Builder setHotspotX(int value) {

      hotspotX_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * X,Y coordinates (relative to upper-left corner) of the cursor hotspot.
     * </pre>
     *
     * <code>int32 hotspot_x = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearHotspotX() {
      bitField0_ = (bitField0_ & ~0x00000008);
      hotspotX_ = 0;
      onChanged();
      return this;
    }

    private int hotspotY_ ;
    /**
     * <code>int32 hotspot_y = 5;</code>
     * @return The hotspotY.
     */
    @java.lang.Override
    public int getHotspotY() {
      return hotspotY_;
    }
    /**
     * <code>int32 hotspot_y = 5;</code>
     * @param value The hotspotY to set.
     * @return This builder for chaining.
     */
    public Builder setHotspotY(int value) {

      hotspotY_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>int32 hotspot_y = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearHotspotY() {
      bitField0_ = (bitField0_ & ~0x00000010);
      hotspotY_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Cursor pixmap data in 32-bit BGRA format compressed with Zstd.
     * </pre>
     *
     * <code>bytes data = 6;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <pre>
     * Cursor pixmap data in 32-bit BGRA format compressed with Zstd.
     * </pre>
     *
     * <code>bytes data = 6;</code>
     * @param value The data to set.
     * @return This builder for chaining.
     */
    public Builder setData(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      data_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Cursor pixmap data in 32-bit BGRA format compressed with Zstd.
     * </pre>
     *
     * <code>bytes data = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearData() {
      bitField0_ = (bitField0_ & ~0x00000020);
      data_ = getDefaultInstance().getData();
      onChanged();
      return this;
    }

    private int dpiX_ ;
    /**
     * <pre>
     * Screen DPI for current cursor.
     * </pre>
     *
     * <code>int32 dpi_x = 7;</code>
     * @return The dpiX.
     */
    @java.lang.Override
    public int getDpiX() {
      return dpiX_;
    }
    /**
     * <pre>
     * Screen DPI for current cursor.
     * </pre>
     *
     * <code>int32 dpi_x = 7;</code>
     * @param value The dpiX to set.
     * @return This builder for chaining.
     */
    public Builder setDpiX(int value) {

      dpiX_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Screen DPI for current cursor.
     * </pre>
     *
     * <code>int32 dpi_x = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearDpiX() {
      bitField0_ = (bitField0_ & ~0x00000040);
      dpiX_ = 0;
      onChanged();
      return this;
    }

    private int dpiY_ ;
    /**
     * <code>int32 dpi_y = 8;</code>
     * @return The dpiY.
     */
    @java.lang.Override
    public int getDpiY() {
      return dpiY_;
    }
    /**
     * <code>int32 dpi_y = 8;</code>
     * @param value The dpiY to set.
     * @return This builder for chaining.
     */
    public Builder setDpiY(int value) {

      dpiY_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>int32 dpi_y = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearDpiY() {
      bitField0_ = (bitField0_ & ~0x00000080);
      dpiY_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:info.malenkov.aspiabook.proto.CursorShape)
  }

  // @@protoc_insertion_point(class_scope:info.malenkov.aspiabook.proto.CursorShape)
  private static final info.malenkov.aspiabook.proto.CursorShape DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new info.malenkov.aspiabook.proto.CursorShape();
  }

  public static info.malenkov.aspiabook.proto.CursorShape getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CursorShape>
      PARSER = new com.google.protobuf.AbstractParser<CursorShape>() {
    @java.lang.Override
    public CursorShape parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CursorShape> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CursorShape> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public info.malenkov.aspiabook.proto.CursorShape getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

