// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aspia.desktop.proto

package info.malenkov.aspiabook.proto;

/**
 * Protobuf type {@code info.malenkov.aspiabook.proto.AudioPacket}
 */
public final class AudioPacket extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:info.malenkov.aspiabook.proto.AudioPacket)
    AudioPacketOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AudioPacket.newBuilder() to construct.
  private AudioPacket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AudioPacket() {
    data_ = java.util.Collections.emptyList();
    encoding_ = 0;
    samplingRate_ = 0;
    bytesPerSample_ = 0;
    channels_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new AudioPacket();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return info.malenkov.aspiabook.proto.AspiaDesktop.internal_static_info_malenkov_aspiabook_proto_AudioPacket_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return info.malenkov.aspiabook.proto.AspiaDesktop.internal_static_info_malenkov_aspiabook_proto_AudioPacket_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            info.malenkov.aspiabook.proto.AudioPacket.class, info.malenkov.aspiabook.proto.AudioPacket.Builder.class);
  }

  /**
   * Protobuf enum {@code info.malenkov.aspiabook.proto.AudioPacket.SamplingRate}
   */
  public enum SamplingRate
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SAMPLING_RATE_INVALID = 0;</code>
     */
    SAMPLING_RATE_INVALID(0),
    /**
     * <code>SAMPLING_RATE_44100 = 44100;</code>
     */
    SAMPLING_RATE_44100(44100),
    /**
     * <code>SAMPLING_RATE_48000 = 48000;</code>
     */
    SAMPLING_RATE_48000(48000),
    /**
     * <code>SAMPLING_RATE_96000 = 96000;</code>
     */
    SAMPLING_RATE_96000(96000),
    /**
     * <code>SAMPLING_RATE_192000 = 192000;</code>
     */
    SAMPLING_RATE_192000(192000),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SAMPLING_RATE_INVALID = 0;</code>
     */
    public static final int SAMPLING_RATE_INVALID_VALUE = 0;
    /**
     * <code>SAMPLING_RATE_44100 = 44100;</code>
     */
    public static final int SAMPLING_RATE_44100_VALUE = 44100;
    /**
     * <code>SAMPLING_RATE_48000 = 48000;</code>
     */
    public static final int SAMPLING_RATE_48000_VALUE = 48000;
    /**
     * <code>SAMPLING_RATE_96000 = 96000;</code>
     */
    public static final int SAMPLING_RATE_96000_VALUE = 96000;
    /**
     * <code>SAMPLING_RATE_192000 = 192000;</code>
     */
    public static final int SAMPLING_RATE_192000_VALUE = 192000;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SamplingRate valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SamplingRate forNumber(int value) {
      switch (value) {
        case 0: return SAMPLING_RATE_INVALID;
        case 44100: return SAMPLING_RATE_44100;
        case 48000: return SAMPLING_RATE_48000;
        case 96000: return SAMPLING_RATE_96000;
        case 192000: return SAMPLING_RATE_192000;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SamplingRate>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SamplingRate> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SamplingRate>() {
            public SamplingRate findValueByNumber(int number) {
              return SamplingRate.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return info.malenkov.aspiabook.proto.AudioPacket.getDescriptor().getEnumTypes().get(0);
    }

    private static final SamplingRate[] VALUES = values();

    public static SamplingRate valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SamplingRate(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:info.malenkov.aspiabook.proto.AudioPacket.SamplingRate)
  }

  /**
   * Protobuf enum {@code info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample}
   */
  public enum BytesPerSample
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BYTES_PER_SAMPLE_INVALID = 0;</code>
     */
    BYTES_PER_SAMPLE_INVALID(0),
    /**
     * <code>BYTES_PER_SAMPLE_2 = 2;</code>
     */
    BYTES_PER_SAMPLE_2(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>BYTES_PER_SAMPLE_INVALID = 0;</code>
     */
    public static final int BYTES_PER_SAMPLE_INVALID_VALUE = 0;
    /**
     * <code>BYTES_PER_SAMPLE_2 = 2;</code>
     */
    public static final int BYTES_PER_SAMPLE_2_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BytesPerSample valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BytesPerSample forNumber(int value) {
      switch (value) {
        case 0: return BYTES_PER_SAMPLE_INVALID;
        case 2: return BYTES_PER_SAMPLE_2;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BytesPerSample>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BytesPerSample> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BytesPerSample>() {
            public BytesPerSample findValueByNumber(int number) {
              return BytesPerSample.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return info.malenkov.aspiabook.proto.AudioPacket.getDescriptor().getEnumTypes().get(1);
    }

    private static final BytesPerSample[] VALUES = values();

    public static BytesPerSample valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BytesPerSample(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample)
  }

  /**
   * Protobuf enum {@code info.malenkov.aspiabook.proto.AudioPacket.Channels}
   */
  public enum Channels
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CHANNELS_INVALID = 0;</code>
     */
    CHANNELS_INVALID(0),
    /**
     * <code>CHANNELS_MONO = 1;</code>
     */
    CHANNELS_MONO(1),
    /**
     * <code>CHANNELS_STEREO = 2;</code>
     */
    CHANNELS_STEREO(2),
    /**
     * <code>CHANNELS_SURROUND = 3;</code>
     */
    CHANNELS_SURROUND(3),
    /**
     * <code>CHANNELS_4_0 = 4;</code>
     */
    CHANNELS_4_0(4),
    /**
     * <code>CHANNELS_4_1 = 5;</code>
     */
    CHANNELS_4_1(5),
    /**
     * <code>CHANNELS_5_1 = 6;</code>
     */
    CHANNELS_5_1(6),
    /**
     * <code>CHANNELS_6_1 = 7;</code>
     */
    CHANNELS_6_1(7),
    /**
     * <code>CHANNELS_7_1 = 8;</code>
     */
    CHANNELS_7_1(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CHANNELS_INVALID = 0;</code>
     */
    public static final int CHANNELS_INVALID_VALUE = 0;
    /**
     * <code>CHANNELS_MONO = 1;</code>
     */
    public static final int CHANNELS_MONO_VALUE = 1;
    /**
     * <code>CHANNELS_STEREO = 2;</code>
     */
    public static final int CHANNELS_STEREO_VALUE = 2;
    /**
     * <code>CHANNELS_SURROUND = 3;</code>
     */
    public static final int CHANNELS_SURROUND_VALUE = 3;
    /**
     * <code>CHANNELS_4_0 = 4;</code>
     */
    public static final int CHANNELS_4_0_VALUE = 4;
    /**
     * <code>CHANNELS_4_1 = 5;</code>
     */
    public static final int CHANNELS_4_1_VALUE = 5;
    /**
     * <code>CHANNELS_5_1 = 6;</code>
     */
    public static final int CHANNELS_5_1_VALUE = 6;
    /**
     * <code>CHANNELS_6_1 = 7;</code>
     */
    public static final int CHANNELS_6_1_VALUE = 7;
    /**
     * <code>CHANNELS_7_1 = 8;</code>
     */
    public static final int CHANNELS_7_1_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Channels valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Channels forNumber(int value) {
      switch (value) {
        case 0: return CHANNELS_INVALID;
        case 1: return CHANNELS_MONO;
        case 2: return CHANNELS_STEREO;
        case 3: return CHANNELS_SURROUND;
        case 4: return CHANNELS_4_0;
        case 5: return CHANNELS_4_1;
        case 6: return CHANNELS_5_1;
        case 7: return CHANNELS_6_1;
        case 8: return CHANNELS_7_1;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Channels>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Channels> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Channels>() {
            public Channels findValueByNumber(int number) {
              return Channels.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return info.malenkov.aspiabook.proto.AudioPacket.getDescriptor().getEnumTypes().get(2);
    }

    private static final Channels[] VALUES = values();

    public static Channels valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Channels(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:info.malenkov.aspiabook.proto.AudioPacket.Channels)
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 1;
  private int timestamp_ = 0;
  /**
   * <code>int32 timestamp = 1;</code>
   * @return The timestamp.
   */
  @java.lang.Override
  public int getTimestamp() {
    return timestamp_;
  }

  public static final int DATA_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.google.protobuf.ByteString> data_;
  /**
   * <code>repeated bytes data = 2;</code>
   * @return A list containing the data.
   */
  @java.lang.Override
  public java.util.List<com.google.protobuf.ByteString>
      getDataList() {
    return data_;
  }
  /**
   * <code>repeated bytes data = 2;</code>
   * @return The count of data.
   */
  public int getDataCount() {
    return data_.size();
  }
  /**
   * <code>repeated bytes data = 2;</code>
   * @param index The index of the element to return.
   * @return The data at the given index.
   */
  public com.google.protobuf.ByteString getData(int index) {
    return data_.get(index);
  }

  public static final int ENCODING_FIELD_NUMBER = 3;
  private int encoding_ = 0;
  /**
   * <code>.info.malenkov.aspiabook.proto.AudioEncoding encoding = 3;</code>
   * @return The enum numeric value on the wire for encoding.
   */
  @java.lang.Override public int getEncodingValue() {
    return encoding_;
  }
  /**
   * <code>.info.malenkov.aspiabook.proto.AudioEncoding encoding = 3;</code>
   * @return The encoding.
   */
  @java.lang.Override public info.malenkov.aspiabook.proto.AudioEncoding getEncoding() {
    info.malenkov.aspiabook.proto.AudioEncoding result = info.malenkov.aspiabook.proto.AudioEncoding.forNumber(encoding_);
    return result == null ? info.malenkov.aspiabook.proto.AudioEncoding.UNRECOGNIZED : result;
  }

  public static final int SAMPLING_RATE_FIELD_NUMBER = 4;
  private int samplingRate_ = 0;
  /**
   * <code>.info.malenkov.aspiabook.proto.AudioPacket.SamplingRate sampling_rate = 4;</code>
   * @return The enum numeric value on the wire for samplingRate.
   */
  @java.lang.Override public int getSamplingRateValue() {
    return samplingRate_;
  }
  /**
   * <code>.info.malenkov.aspiabook.proto.AudioPacket.SamplingRate sampling_rate = 4;</code>
   * @return The samplingRate.
   */
  @java.lang.Override public info.malenkov.aspiabook.proto.AudioPacket.SamplingRate getSamplingRate() {
    info.malenkov.aspiabook.proto.AudioPacket.SamplingRate result = info.malenkov.aspiabook.proto.AudioPacket.SamplingRate.forNumber(samplingRate_);
    return result == null ? info.malenkov.aspiabook.proto.AudioPacket.SamplingRate.UNRECOGNIZED : result;
  }

  public static final int BYTES_PER_SAMPLE_FIELD_NUMBER = 5;
  private int bytesPerSample_ = 0;
  /**
   * <code>.info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample bytes_per_sample = 5;</code>
   * @return The enum numeric value on the wire for bytesPerSample.
   */
  @java.lang.Override public int getBytesPerSampleValue() {
    return bytesPerSample_;
  }
  /**
   * <code>.info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample bytes_per_sample = 5;</code>
   * @return The bytesPerSample.
   */
  @java.lang.Override public info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample getBytesPerSample() {
    info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample result = info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample.forNumber(bytesPerSample_);
    return result == null ? info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample.UNRECOGNIZED : result;
  }

  public static final int CHANNELS_FIELD_NUMBER = 6;
  private int channels_ = 0;
  /**
   * <code>.info.malenkov.aspiabook.proto.AudioPacket.Channels channels = 6;</code>
   * @return The enum numeric value on the wire for channels.
   */
  @java.lang.Override public int getChannelsValue() {
    return channels_;
  }
  /**
   * <code>.info.malenkov.aspiabook.proto.AudioPacket.Channels channels = 6;</code>
   * @return The channels.
   */
  @java.lang.Override public info.malenkov.aspiabook.proto.AudioPacket.Channels getChannels() {
    info.malenkov.aspiabook.proto.AudioPacket.Channels result = info.malenkov.aspiabook.proto.AudioPacket.Channels.forNumber(channels_);
    return result == null ? info.malenkov.aspiabook.proto.AudioPacket.Channels.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (timestamp_ != 0) {
      output.writeInt32(1, timestamp_);
    }
    for (int i = 0; i < data_.size(); i++) {
      output.writeBytes(2, data_.get(i));
    }
    if (encoding_ != info.malenkov.aspiabook.proto.AudioEncoding.AUDIO_ENCODING_UNKNOWN.getNumber()) {
      output.writeEnum(3, encoding_);
    }
    if (samplingRate_ != info.malenkov.aspiabook.proto.AudioPacket.SamplingRate.SAMPLING_RATE_INVALID.getNumber()) {
      output.writeEnum(4, samplingRate_);
    }
    if (bytesPerSample_ != info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample.BYTES_PER_SAMPLE_INVALID.getNumber()) {
      output.writeEnum(5, bytesPerSample_);
    }
    if (channels_ != info.malenkov.aspiabook.proto.AudioPacket.Channels.CHANNELS_INVALID.getNumber()) {
      output.writeEnum(6, channels_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (timestamp_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, timestamp_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < data_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeBytesSizeNoTag(data_.get(i));
      }
      size += dataSize;
      size += 1 * getDataList().size();
    }
    if (encoding_ != info.malenkov.aspiabook.proto.AudioEncoding.AUDIO_ENCODING_UNKNOWN.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, encoding_);
    }
    if (samplingRate_ != info.malenkov.aspiabook.proto.AudioPacket.SamplingRate.SAMPLING_RATE_INVALID.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, samplingRate_);
    }
    if (bytesPerSample_ != info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample.BYTES_PER_SAMPLE_INVALID.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, bytesPerSample_);
    }
    if (channels_ != info.malenkov.aspiabook.proto.AudioPacket.Channels.CHANNELS_INVALID.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(6, channels_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof info.malenkov.aspiabook.proto.AudioPacket)) {
      return super.equals(obj);
    }
    info.malenkov.aspiabook.proto.AudioPacket other = (info.malenkov.aspiabook.proto.AudioPacket) obj;

    if (getTimestamp()
        != other.getTimestamp()) return false;
    if (!getDataList()
        .equals(other.getDataList())) return false;
    if (encoding_ != other.encoding_) return false;
    if (samplingRate_ != other.samplingRate_) return false;
    if (bytesPerSample_ != other.bytesPerSample_) return false;
    if (channels_ != other.channels_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
    hash = (53 * hash) + getTimestamp();
    if (getDataCount() > 0) {
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getDataList().hashCode();
    }
    hash = (37 * hash) + ENCODING_FIELD_NUMBER;
    hash = (53 * hash) + encoding_;
    hash = (37 * hash) + SAMPLING_RATE_FIELD_NUMBER;
    hash = (53 * hash) + samplingRate_;
    hash = (37 * hash) + BYTES_PER_SAMPLE_FIELD_NUMBER;
    hash = (53 * hash) + bytesPerSample_;
    hash = (37 * hash) + CHANNELS_FIELD_NUMBER;
    hash = (53 * hash) + channels_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static info.malenkov.aspiabook.proto.AudioPacket parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiabook.proto.AudioPacket parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiabook.proto.AudioPacket parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiabook.proto.AudioPacket parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiabook.proto.AudioPacket parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiabook.proto.AudioPacket parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiabook.proto.AudioPacket parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiabook.proto.AudioPacket parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static info.malenkov.aspiabook.proto.AudioPacket parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiabook.proto.AudioPacket parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static info.malenkov.aspiabook.proto.AudioPacket parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiabook.proto.AudioPacket parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(info.malenkov.aspiabook.proto.AudioPacket prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code info.malenkov.aspiabook.proto.AudioPacket}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:info.malenkov.aspiabook.proto.AudioPacket)
      info.malenkov.aspiabook.proto.AudioPacketOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return info.malenkov.aspiabook.proto.AspiaDesktop.internal_static_info_malenkov_aspiabook_proto_AudioPacket_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return info.malenkov.aspiabook.proto.AspiaDesktop.internal_static_info_malenkov_aspiabook_proto_AudioPacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.malenkov.aspiabook.proto.AudioPacket.class, info.malenkov.aspiabook.proto.AudioPacket.Builder.class);
    }

    // Construct using info.malenkov.aspiabook.proto.AudioPacket.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      timestamp_ = 0;
      data_ = java.util.Collections.emptyList();
      encoding_ = 0;
      samplingRate_ = 0;
      bytesPerSample_ = 0;
      channels_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return info.malenkov.aspiabook.proto.AspiaDesktop.internal_static_info_malenkov_aspiabook_proto_AudioPacket_descriptor;
    }

    @java.lang.Override
    public info.malenkov.aspiabook.proto.AudioPacket getDefaultInstanceForType() {
      return info.malenkov.aspiabook.proto.AudioPacket.getDefaultInstance();
    }

    @java.lang.Override
    public info.malenkov.aspiabook.proto.AudioPacket build() {
      info.malenkov.aspiabook.proto.AudioPacket result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public info.malenkov.aspiabook.proto.AudioPacket buildPartial() {
      info.malenkov.aspiabook.proto.AudioPacket result = new info.malenkov.aspiabook.proto.AudioPacket(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(info.malenkov.aspiabook.proto.AudioPacket result) {
      if (((bitField0_ & 0x00000002) != 0)) {
        data_ = java.util.Collections.unmodifiableList(data_);
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.data_ = data_;
    }

    private void buildPartial0(info.malenkov.aspiabook.proto.AudioPacket result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.timestamp_ = timestamp_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.encoding_ = encoding_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.samplingRate_ = samplingRate_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.bytesPerSample_ = bytesPerSample_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.channels_ = channels_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof info.malenkov.aspiabook.proto.AudioPacket) {
        return mergeFrom((info.malenkov.aspiabook.proto.AudioPacket)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(info.malenkov.aspiabook.proto.AudioPacket other) {
      if (other == info.malenkov.aspiabook.proto.AudioPacket.getDefaultInstance()) return this;
      if (other.getTimestamp() != 0) {
        setTimestamp(other.getTimestamp());
      }
      if (!other.data_.isEmpty()) {
        if (data_.isEmpty()) {
          data_ = other.data_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureDataIsMutable();
          data_.addAll(other.data_);
        }
        onChanged();
      }
      if (other.encoding_ != 0) {
        setEncodingValue(other.getEncodingValue());
      }
      if (other.samplingRate_ != 0) {
        setSamplingRateValue(other.getSamplingRateValue());
      }
      if (other.bytesPerSample_ != 0) {
        setBytesPerSampleValue(other.getBytesPerSampleValue());
      }
      if (other.channels_ != 0) {
        setChannelsValue(other.getChannelsValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              timestamp_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              com.google.protobuf.ByteString v = input.readBytes();
              ensureDataIsMutable();
              data_.add(v);
              break;
            } // case 18
            case 24: {
              encoding_ = input.readEnum();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              samplingRate_ = input.readEnum();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              bytesPerSample_ = input.readEnum();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              channels_ = input.readEnum();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int timestamp_ ;
    /**
     * <code>int32 timestamp = 1;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public int getTimestamp() {
      return timestamp_;
    }
    /**
     * <code>int32 timestamp = 1;</code>
     * @param value The timestamp to set.
     * @return This builder for chaining.
     */
    public Builder setTimestamp(int value) {

      timestamp_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>int32 timestamp = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimestamp() {
      bitField0_ = (bitField0_ & ~0x00000001);
      timestamp_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.google.protobuf.ByteString> data_ = java.util.Collections.emptyList();
    private void ensureDataIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        data_ = new java.util.ArrayList<com.google.protobuf.ByteString>(data_);
        bitField0_ |= 0x00000002;
      }
    }
    /**
     * <code>repeated bytes data = 2;</code>
     * @return A list containing the data.
     */
    public java.util.List<com.google.protobuf.ByteString>
        getDataList() {
      return ((bitField0_ & 0x00000002) != 0) ?
               java.util.Collections.unmodifiableList(data_) : data_;
    }
    /**
     * <code>repeated bytes data = 2;</code>
     * @return The count of data.
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated bytes data = 2;</code>
     * @param index The index of the element to return.
     * @return The data at the given index.
     */
    public com.google.protobuf.ByteString getData(int index) {
      return data_.get(index);
    }
    /**
     * <code>repeated bytes data = 2;</code>
     * @param index The index to set the value at.
     * @param value The data to set.
     * @return This builder for chaining.
     */
    public Builder setData(
        int index, com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      ensureDataIsMutable();
      data_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes data = 2;</code>
     * @param value The data to add.
     * @return This builder for chaining.
     */
    public Builder addData(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      ensureDataIsMutable();
      data_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes data = 2;</code>
     * @param values The data to add.
     * @return This builder for chaining.
     */
    public Builder addAllData(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureDataIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, data_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes data = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearData() {
      data_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private int encoding_ = 0;
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioEncoding encoding = 3;</code>
     * @return The enum numeric value on the wire for encoding.
     */
    @java.lang.Override public int getEncodingValue() {
      return encoding_;
    }
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioEncoding encoding = 3;</code>
     * @param value The enum numeric value on the wire for encoding to set.
     * @return This builder for chaining.
     */
    public Builder setEncodingValue(int value) {
      encoding_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioEncoding encoding = 3;</code>
     * @return The encoding.
     */
    @java.lang.Override
    public info.malenkov.aspiabook.proto.AudioEncoding getEncoding() {
      info.malenkov.aspiabook.proto.AudioEncoding result = info.malenkov.aspiabook.proto.AudioEncoding.forNumber(encoding_);
      return result == null ? info.malenkov.aspiabook.proto.AudioEncoding.UNRECOGNIZED : result;
    }
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioEncoding encoding = 3;</code>
     * @param value The encoding to set.
     * @return This builder for chaining.
     */
    public Builder setEncoding(info.malenkov.aspiabook.proto.AudioEncoding value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      encoding_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioEncoding encoding = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearEncoding() {
      bitField0_ = (bitField0_ & ~0x00000004);
      encoding_ = 0;
      onChanged();
      return this;
    }

    private int samplingRate_ = 0;
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioPacket.SamplingRate sampling_rate = 4;</code>
     * @return The enum numeric value on the wire for samplingRate.
     */
    @java.lang.Override public int getSamplingRateValue() {
      return samplingRate_;
    }
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioPacket.SamplingRate sampling_rate = 4;</code>
     * @param value The enum numeric value on the wire for samplingRate to set.
     * @return This builder for chaining.
     */
    public Builder setSamplingRateValue(int value) {
      samplingRate_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioPacket.SamplingRate sampling_rate = 4;</code>
     * @return The samplingRate.
     */
    @java.lang.Override
    public info.malenkov.aspiabook.proto.AudioPacket.SamplingRate getSamplingRate() {
      info.malenkov.aspiabook.proto.AudioPacket.SamplingRate result = info.malenkov.aspiabook.proto.AudioPacket.SamplingRate.forNumber(samplingRate_);
      return result == null ? info.malenkov.aspiabook.proto.AudioPacket.SamplingRate.UNRECOGNIZED : result;
    }
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioPacket.SamplingRate sampling_rate = 4;</code>
     * @param value The samplingRate to set.
     * @return This builder for chaining.
     */
    public Builder setSamplingRate(info.malenkov.aspiabook.proto.AudioPacket.SamplingRate value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      samplingRate_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioPacket.SamplingRate sampling_rate = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearSamplingRate() {
      bitField0_ = (bitField0_ & ~0x00000008);
      samplingRate_ = 0;
      onChanged();
      return this;
    }

    private int bytesPerSample_ = 0;
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample bytes_per_sample = 5;</code>
     * @return The enum numeric value on the wire for bytesPerSample.
     */
    @java.lang.Override public int getBytesPerSampleValue() {
      return bytesPerSample_;
    }
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample bytes_per_sample = 5;</code>
     * @param value The enum numeric value on the wire for bytesPerSample to set.
     * @return This builder for chaining.
     */
    public Builder setBytesPerSampleValue(int value) {
      bytesPerSample_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample bytes_per_sample = 5;</code>
     * @return The bytesPerSample.
     */
    @java.lang.Override
    public info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample getBytesPerSample() {
      info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample result = info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample.forNumber(bytesPerSample_);
      return result == null ? info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample.UNRECOGNIZED : result;
    }
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample bytes_per_sample = 5;</code>
     * @param value The bytesPerSample to set.
     * @return This builder for chaining.
     */
    public Builder setBytesPerSample(info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      bytesPerSample_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioPacket.BytesPerSample bytes_per_sample = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearBytesPerSample() {
      bitField0_ = (bitField0_ & ~0x00000010);
      bytesPerSample_ = 0;
      onChanged();
      return this;
    }

    private int channels_ = 0;
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioPacket.Channels channels = 6;</code>
     * @return The enum numeric value on the wire for channels.
     */
    @java.lang.Override public int getChannelsValue() {
      return channels_;
    }
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioPacket.Channels channels = 6;</code>
     * @param value The enum numeric value on the wire for channels to set.
     * @return This builder for chaining.
     */
    public Builder setChannelsValue(int value) {
      channels_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioPacket.Channels channels = 6;</code>
     * @return The channels.
     */
    @java.lang.Override
    public info.malenkov.aspiabook.proto.AudioPacket.Channels getChannels() {
      info.malenkov.aspiabook.proto.AudioPacket.Channels result = info.malenkov.aspiabook.proto.AudioPacket.Channels.forNumber(channels_);
      return result == null ? info.malenkov.aspiabook.proto.AudioPacket.Channels.UNRECOGNIZED : result;
    }
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioPacket.Channels channels = 6;</code>
     * @param value The channels to set.
     * @return This builder for chaining.
     */
    public Builder setChannels(info.malenkov.aspiabook.proto.AudioPacket.Channels value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000020;
      channels_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.info.malenkov.aspiabook.proto.AudioPacket.Channels channels = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearChannels() {
      bitField0_ = (bitField0_ & ~0x00000020);
      channels_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:info.malenkov.aspiabook.proto.AudioPacket)
  }

  // @@protoc_insertion_point(class_scope:info.malenkov.aspiabook.proto.AudioPacket)
  private static final info.malenkov.aspiabook.proto.AudioPacket DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new info.malenkov.aspiabook.proto.AudioPacket();
  }

  public static info.malenkov.aspiabook.proto.AudioPacket getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AudioPacket>
      PARSER = new com.google.protobuf.AbstractParser<AudioPacket>() {
    @java.lang.Override
    public AudioPacket parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AudioPacket> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AudioPacket> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public info.malenkov.aspiabook.proto.AudioPacket getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

